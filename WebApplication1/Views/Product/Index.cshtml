@model IEnumerable<Product>
@using X.PagedList.Mvc.Core;
@using X.PagedList;

@{
    ViewData["Title"] = "Product List";
}
<h3>@ViewData["Title"]</h3>
<hr />
<p>
    <a class="btn btn-sm btn-primary" asp-action="Create" asp-controller="Product">Create New Product</a>
</p>
<table class="table table-bordered table-responsive table-hover">
    <thead>
        <tr>
            <th>ProductId </th>
            <th>ProductName</th>
            <th>CategoryId</th>
            <th>CategoryName</th>
            <th>Action</th>
        </tr>
    </thead>
    <tbody>
        @if(Model != null && Model.Any())
        {
            @foreach(var product in Model)
            {
                <tr>
                    <td>@product.Id</td>
                    <td>@product.Name</td>                
                    <td>@product.CategoryId</td>                
                    <td>@product.Category.Name</td>
                    <td>
                        <a class="btn btn-sm btn-warning" asp-action="Update" asp-controller="Product" asp-route-id="@product.Id">Update</a>
                        <a class="btn btn-sm btn-danger" asp-action="Delete" asp-controller="Product" asp-route-id="@product.Id">Delete</a>
                    </td>
                </tr>
               
            }

        }
        else
        {
            <tr>
                <td colspan="5">
                    <div>Products Not Available In Database</div>
                </td>
            </tr>
            
        }
    </tbody>
</table>

@Html.PagedListPager((IPagedList)Model, i => Url.Action("Index", new { i = i }))